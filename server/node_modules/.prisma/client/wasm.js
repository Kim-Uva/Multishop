
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.9.1
 * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
 */
Prisma.prismaVersion = {
  client: "5.9.1",
  engine: "23fdc5965b1e05fc54e5f26ed3de66776b93de64"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellidos: 'apellidos',
  correo: 'correo',
  contrasenna: 'contrasenna',
  fechaRegistro: 'fechaRegistro',
  rol: 'rol',
  idBodega: 'idBodega',
  estado: 'estado'
};

exports.Prisma.EstadoScalarFieldEnum = {
  id: 'id',
  estado: 'estado'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.SubCategoriaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.ProductoScalarFieldEnum = {
  id: 'id',
  codigoProducto: 'codigoProducto',
  nombre: 'nombre',
  descripcion: 'descripcion',
  stock: 'stock',
  precio: 'precio',
  estadoProducto: 'estadoProducto',
  idCategoria: 'idCategoria',
  idSubCategoria: 'idSubCategoria'
};

exports.Prisma.FotoScalarFieldEnum = {
  id: 'id',
  idProducto: 'idProducto',
  foto: 'foto'
};

exports.Prisma.UbicacionScalarFieldEnum = {
  id: 'id',
  idProvincia: 'idProvincia',
  idCanton: 'idCanton',
  idDistrito: 'idDistrito',
  direccionExacta: 'direccionExacta'
};

exports.Prisma.BodegaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  idUbicacion: 'idUbicacion',
  tamanno: 'tamanno',
  capacidad: 'capacidad',
  seguridad: 'seguridad'
};

exports.Prisma.InventarioScalarFieldEnum = {
  idBodega: 'idBodega',
  idProducto: 'idProducto',
  idUsuarioRegistro: 'idUsuarioRegistro',
  idUsuarioActualizo: 'idUsuarioActualizo',
  cantidad: 'cantidad',
  cantidadMinima: 'cantidadMinima',
  cantidadMaxima: 'cantidadMaxima',
  fechaRegistro: 'fechaRegistro'
};

exports.Prisma.ProveedorScalarFieldEnum = {
  id: 'id',
  identificacion: 'identificacion',
  nombreProveedor: 'nombreProveedor',
  idUbicacion: 'idUbicacion',
  correoElectronico: 'correoElectronico',
  telefono: 'telefono'
};

exports.Prisma.DetalleCompraScalarFieldEnum = {
  id: 'id',
  idEncabezadoCompra: 'idEncabezadoCompra',
  idProducto: 'idProducto',
  cantidad: 'cantidad',
  precio: 'precio'
};

exports.Prisma.EncabezadoCompraScalarFieldEnum = {
  id: 'id',
  fechaCompra: 'fechaCompra',
  idProveedor: 'idProveedor',
  idUsuario: 'idUsuario',
  idBodega: 'idBodega'
};

exports.Prisma.PedidoScalarFieldEnum = {
  idEncabezadoCompra: 'idEncabezadoCompra',
  idEstado: 'idEstado',
  observaciones: 'observaciones',
  fechaPedido: 'fechaPedido'
};

exports.Prisma.TrasladoScalarFieldEnum = {
  id: 'id',
  idBodegaOrigen: 'idBodegaOrigen',
  idBodegaDestino: 'idBodegaDestino',
  idUsuario: 'idUsuario',
  idProducto: 'idProducto',
  cantidad: 'cantidad',
  idEstado: 'idEstado',
  fechaRegistro: 'fechaRegistro'
};

exports.Prisma.HistorialScalarFieldEnum = {
  id: 'id',
  idBodega: 'idBodega',
  idUsuarioRegistro: 'idUsuarioRegistro',
  idProducto: 'idProducto',
  justificacion: 'justificacion',
  fechaAjuste: 'fechaAjuste'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Rol = exports.$Enums.Rol = {
  Administrador: 'Administrador',
  Encargado: 'Encargado'
};

exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Estado: 'Estado',
  Categoria: 'Categoria',
  SubCategoria: 'SubCategoria',
  Producto: 'Producto',
  Foto: 'Foto',
  Ubicacion: 'Ubicacion',
  Bodega: 'Bodega',
  Inventario: 'Inventario',
  Proveedor: 'Proveedor',
  DetalleCompra: 'DetalleCompra',
  EncabezadoCompra: 'EncabezadoCompra',
  Pedido: 'Pedido',
  Traslado: 'Traslado',
  Historial: 'Historial'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
