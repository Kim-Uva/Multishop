// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // la bd en la carpeta env
  url      = env("DATABASE_URL")
}

//Base de datos
//Usuarios
model Usuario {
  id                  Int                @id @default(autoincrement())
  nombre              String
  apellidos           String
  correo              String             @unique
  contrasenna         String
  fechaRegistro       DateTime           @default(now())
  rol                 Rol                @default(Encargado)
  idBodega            Int?
  encabezadoCompras   EncabezadoCompra[]
  Traslado            Traslado[]
  Historial           Historial[]
  invUsuarioRegistro  Inventario[]       @relation("idUsuarioRegistro")
  invUsuarioActualizo Inventario[]       @relation("idUsuarioActualizo")
  bodega              Bodega?            @relation(fields: [idBodega], references: [id])
}

//Estado
model Estado {
  id       Int        @id @default(autoincrement())
  estado   String
  pedidos  Pedido[]
  Traslado Traslado[]
  // TrasladoOrigen  TrasladoOrigen[]
}

//Roles
enum Rol {
  Administrador
  Encargado
}

//Categoria
model Categoria {
  id           Int            @id @default(autoincrement())
  nombre       String
  subCategoria SubCategoria[]
}

model SubCategoria {
  id         Int         @id @default(autoincrement())
  //   idCategoria Int
  nombre     String
  producto   Producto[]
  categorias Categoria[]
}

//Producto
model Producto {
  id              Int             @id @default(autoincrement())
  codigoProducto  String //SKU
  nombre          String
  descripcion     String
  stock           Int
  precio          Decimal         @db.Decimal(10, 2)
  estadoProducto  Boolean // Campo adicional faltante, puede ser nuevo o usado
  idSubCategoria  Int
  foto            Foto[]
  bodegaProductos Inventario[]
  detalleCompras  DetalleCompra[]
  Historial       Historial[]
  Traslado        Traslado[]
  subCategorias   SubCategoria    @relation(fields: [idSubCategoria], references: [id]) // Llave foranea
}

model Foto {
  id         Int      @id @default(autoincrement())
  idProducto Int
  foto       Bytes
  producto   Producto @relation(fields: [idProducto], references: [id]) // Llave foranea
}

//Ubicaciones
model Ubicacion {
  id          Int         @id @default(autoincrement())
  idProvincia Int
  idCanton    Int
  idDistrito  Int
  direccionExacta String?
  proveedor   Proveedor[]
  bodega      Bodega[]
  // provincia   Provincia[]
  // cantones    Canton[]
  // distritos   Distrito[]
  //barrios     Barrio[]
}

// model Provincia {
//   id       Int      @id
//   nombre   String
//   cantones Canton[]

//   ubicacion Ubicacion @relation(fields: [id], references: [idProvincia]) // Llave foranea
// }

// model Canton {
//   id          Int       @id
//   idProvincia Int
//   nombre      String
//   provincias  Provincia @relation(fields: [idProvincia], references: [id]) // Llave foranea
//   ubicacion   Ubicacion @relation(fields: [id], references: [idCanton]) // Llave foranea

//   distritos Distrito[]
// }

// model Distrito {
//   id        Int       @id
//   idCanton  Int
//   nombre    String
//   cantones  Canton    @relation(fields: [idCanton], references: [id]) // Llave foranea
//   ubicacion Ubicacion @relation(fields: [id], references: [idDistrito]) // Llave foranea

//   barrios Barrio[]

// model Barrio {
//   id          Int    @id @default(autoincrement())
//   idDistrito  Int
//   nombre      String
//   distritos  Distrito  @relation(fields: [idDistrito], references: [id])
//   ubicacion  Ubicacion @relation(fields: [id], references: [idBarrio])
// }

//Bodegas
model Bodega {
  id              Int             @id @default(autoincrement())
  nombre          String
  idUbicacion     Int
  tamanno         Float
  capacidad       Float
  seguridad       Boolean
  usuario         Usuario[] // Bodega tiene varios encargados
  inventario      Inventario[]
  detalleCompra   DetalleCompra[]
  Historial       Historial[]
  TrasladoOrigen  Traslado[]      @relation("idBodegaOrigen")
  TrasladoDestino Traslado[]      @relation("idBodegaDestino")
  ubicacion       Ubicacion       @relation(fields: [idUbicacion], references: [id])
}

//Inventario Tabla muchos a muchos
model Inventario {
  //Bodega
  idBodega Int
  bodegas  Bodega @relation(fields: [idBodega], references: [id])

  //Producto
  idProducto Int
  producto   Producto @relation(fields: [idProducto], references: [id])

  //Usuario
  idUsuarioRegistro Int // Usuario que registra
  usuarioRegistro   Usuario @relation("idUsuarioRegistro", fields: [idUsuarioRegistro], references: [id])

  idUsuarioActualizo Int // Usuario que actualiza
  usuarioActualizo   Usuario @relation("idUsuarioActualizo", fields: [idUsuarioActualizo], references: [id])

  cantidad       Int
  cantidadMinima Int
  cantidadMaxima Int

  fechaRegistro DateTime @default(now()) @updatedAt

  @@id([idBodega, idProducto])
}

//Tabla Proveedor
model Proveedor {
  id                Int                @id @default(autoincrement())
  identificacion    Int
  nombreProveedor   String
  idUbicacion       Int
  correoElectronico String @unique
  telefono          Int
  encabezadoCompra  EncabezadoCompra[]
  ubicacion         Ubicacion          @relation(fields: [idUbicacion], references: [id]) // Llave foranea
}

//Compras y pedidos
model EncabezadoCompra {
  id            Int             @id @default(autoincrement())
  fechaCompra   DateTime        @default(now())
  idProveedor   Int
  idUsuario     Int
  usuario       Usuario         @relation(fields: [idUsuario], references: [id])
  proveedor     Proveedor       @relation(fields: [idProveedor], references: [id])
  detalleCompra DetalleCompra[]
  pedido        Pedido[]
}

model DetalleCompra {
  id                 Int              @id @default(autoincrement())
  idEncabezadoCompra Int
  idProducto         Int
  idBodega           Int
  cantidad           Int
  producto           Producto         @relation(fields: [idProducto], references: [id])
  encabezadoCompra   EncabezadoCompra @relation(fields: [idEncabezadoCompra], references: [id])
  bodega             Bodega           @relation(fields: [idBodega], references: [id])
}

model Pedido {
  idEncabezadoCompra Int              @id
  idEstado           Int
  observaciones      String?
  fechaPedido        DateTime         @default(now()) 
  estadoPedido       Estado           @relation(fields: [idEstado], references: [id])
  encabezadoCompra   EncabezadoCompra @relation(fields: [idEncabezadoCompra], references: [id])
  // trasladoOrigen     TrasladoOrigen[]
}

// Cada traslado debe identificar la bodega origen y la bodega destino, el usuario que realiza el registro, la
// fecha de envió y la fecha de recibido.
// Además, se debe poder varios productos en el traslado, indicando la cantidad respectiva.

model Traslado {
  id              Int      @id @default(autoincrement())
  idBodegaOrigen  Int //Bodega Origen
  idBodegaDestino Int//Bodega Destino
  idUsuario       Int?
  idProducto      Int
  cantidad        Int
  idEstado        Int
  fechaRegistro   DateTime @default(now()) @updatedAt

  bodegaOrigen  Bodega   @relation("idBodegaOrigen", fields: [idBodegaOrigen], references: [id])
  bodegaDestino Bodega   @relation("idBodegaDestino", fields: [idBodegaDestino], references: [id])
  estadoDestino Estado   @relation(fields: [idEstado], references: [id])
  usuario       Usuario? @relation(fields: [idUsuario], references: [id])
  producto      Producto @relation(fields: [idProducto], references: [id])
}

//Tabla origen
// model TrasladoOrigen {
//   id            Int    @id @default(autoincrement())
//   idBodega      Int //Bodega Origen
//   bodega       Bodega @relation(fields: [idBodega], references: [id])
//   idPedido      Int
//   pedidos       Pedido @relation(fields: [idPedido], references: [idEncabezadoCompra])
//   idEstado      Int
//   estadoDestino Estado @relation(fields: [idEstado], references: [id])

//   fechaSalida     DateTime          @default(now()) //Puede ser la fecha de envio
//   trasladoBodegas TrasladoBodegas[]
// }

//Traslado tabla muchos a muchos
// model TrasladoBodegas {
//   idOrigen Int
//   origen   TrasladoOrigen @relation(fields: [idOrigen], references: [id])

//   idDestino Int
//   destinos  TrasladoDestino @relation(fields: [idDestino], references: [id])

//   idUsuario Int
//   usuario   Usuario @relation(fields: [idUsuario], references: [id])

//   fechaRegistro DateTime @default(now()) @updatedAt

//   @@id([idOrigen, idDestino, idUsuario])
// }

//TablaDestino
// model TrasladoDestino {
//   id              Int               @id @default(autoincrement())
//   idBodegaDestino Int //Bodega Destino
//   bodega         Bodega            @relation(fields: [idBodegaDestino], references: [id])
//   fechaRecibido   DateTime          @default(now()) @updatedAt
//   idEstado        Int
//   estadoDestino   Estado            @relation(fields: [idEstado], references: [id])
//   TrasladoBodegas TrasladoBodegas[]
// }

model Historial {
  id                Int      @id @default(autoincrement())
  idBodega          Int
  idUsuarioRegistro Int
  idProducto        Int
  justificacion     String
  fechaAjuste       DateTime @default(now()) @updatedAt
  producto        Producto @relation(fields: [idProducto], references: [id])
  bodega          Bodega   @relation(fields: [idBodega], references: [id])
  usuarioRegistro Usuario  @relation(fields: [idUsuarioRegistro], references: [id])
}
